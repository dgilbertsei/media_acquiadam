---
type: default
team: DIT
service: media_acquiadam

# The environment container image is used to prepare code versions
# and tooling for tests during pre, post and build stages.
environment_image:
  file: ".acquia/Dockerfile.ci"
  context: "."
  # The build_matrix is only required for testing multiple versions.
  build_matrix:
    base_images:
      - php:7.4-cli-buster # First image is the default.

_orca_steps: &orca_steps
  - steps:
      - |
        cd $ORCA_WORKSPACE
        ../orca/bin/ci/before_install.sh
        # Create the test fixture and place the SUT.
        ../orca/bin/ci/install.sh && error=false || error=true
        ./tests/travis/install.sh && error=false || error=true
        # Display details about the fixture.
        ../orca/bin/ci/before_script.sh && error=false || error=true
        # Run the test script.
        ../orca/bin/ci/script.sh && error=false || error=true
        ../orca/bin/ci/before_cache.sh && error=false || error=true
        if [ "$error" = "true" ]; then
          echo "Running after failure";
          ../orca/bin/ci/after_failure.sh;
          if [ "$ALLOWED_FAILURE" = "true" ]; then
            exit 0;
          else
            exit 1;
          fi
        else
          echo "Running after success";
          ../orca/bin/ci/after_success.sh;
        fi

# -- Continuous Integration --
# Pre-build runs after building the environment image, and relies on it to
# run its sub-stages' steps inside of the environment container.
pre_build:
  static_code_analysis:
    - args: --env ORCA_JOB=STATIC_CODE_ANALYSIS
      <<: *orca_steps
  integrated_test_on_prev_minor:
    - args: --env ORCA_JOB=INTEGRATED_TEST_ON_PREVIOUS_MINOR
      <<: *orca_steps
  isolated_test_on_current:
    - args: --env ORCA_JOB=ISOLATED_TEST_ON_CURRENT
      <<: *orca_steps
  integrated_test_on_current:
    - args: --env ORCA_JOB=INTEGRATED_TEST_ON_CURRENT
      <<: *orca_steps
  isolated_test_on_current_dev:
    - args: --env ORCA_JOB=ISOLATED_TEST_ON_CURRENT_DEV --env ALLOWED_FAILURE=true
      <<: *orca_steps
  integrated_test_on_current_dev:
    - args: --env ORCA_JOB=INTEGRATED_TEST_ON_CURRENT_DEV --env ALLOWED_FAILURE=true
      <<: *orca_steps
  integrated_test_on_next_minor:
    - args: --env ORCA_JOB=INTEGRATED_TEST_ON_NEXT_MINOR --env ALLOWED_FAILURE=true
      <<: *orca_steps
  integrated_test_on_next_minor_dev:
    - args: --env ORCA_JOB=INTEGRATED_TEST_ON_NEXT_MINOR_DEV --env ALLOWED_FAILURE=true
      <<: *orca_steps
  loose_deprecated_code_scan:
    - args: --env ORCA_JOB=LOOSE_DEPRECATED_CODE_SCAN --env ALLOWED_FAILURE=true
      <<: *orca_steps
  strict_deprecated_code_scan:
    - args: --env ORCA_JOB=STRICT_DEPRECATED_CODE_SCAN
      <<: *orca_steps

  security_composition_analysis:
    required: false

after_success:
  - steps:
      - cd $ORCA_WORKSPACE && ../orca/bin/travis/after_success.sh

after_failure:
  - steps:
      - cd $ORCA_WORKSPACE && ../orca/bin/travis/after_failure.sh

# -- Slack Bot Integration --
notify:
  channel: drupal-integration-eng
